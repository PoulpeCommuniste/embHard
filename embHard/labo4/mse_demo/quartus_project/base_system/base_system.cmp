	component base_system is
		port (
			cam_data      : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- data
			cam_hsync     : in    std_logic                     := 'X';             -- hsync
			cam_pxlclk    : in    std_logic                     := 'X';             -- pxlclk
			cam_pwrdwn    : out   std_logic;                                        -- pwrdwn
			cam_rstb      : out   std_logic;                                        -- rstb
			cam_vsync     : in    std_logic                     := 'X';             -- vsync
			clk_clk       : in    std_logic                     := 'X';             -- clk
			dac_clk_clk   : out   std_logic;                                        -- clk
			dipsw_export  : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- export
			i2c_scl       : out   std_logic;                                        -- scl
			i2c_sda       : inout std_logic                     := 'X';             -- sda
			lcd_csb       : out   std_logic;                                        -- csb
			lcd_db        : inout std_logic_vector(15 downto 0) := (others => 'X'); -- db
			lcd_dcb       : out   std_logic;                                        -- dcb
			lcd_im        : out   std_logic;                                        -- im
			lcd_rb        : out   std_logic;                                        -- rb
			lcd_resb      : out   std_logic;                                        -- resb
			lcd_wb        : out   std_logic;                                        -- wb
			mclk_clk      : out   std_logic;                                        -- clk
			reset_reset_n : in    std_logic                     := 'X';             -- reset_n
			sdram_addr    : out   std_logic_vector(11 downto 0);                    -- addr
			sdram_ba      : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_cas_n   : out   std_logic;                                        -- cas_n
			sdram_cke     : out   std_logic;                                        -- cke
			sdram_cs_n    : out   std_logic;                                        -- cs_n
			sdram_dq      : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram_dqm     : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram_ras_n   : out   std_logic;                                        -- ras_n
			sdram_we_n    : out   std_logic;                                        -- we_n
			sdram_clk_clk : out   std_logic;                                        -- clk
			vga_blue      : out   std_logic_vector(9 downto 0);                     -- blue
			vga_green     : out   std_logic_vector(9 downto 0);                     -- green
			vga_hsync     : out   std_logic;                                        -- hsync
			vga_red       : out   std_logic_vector(9 downto 0);                     -- red
			vga_vsync     : out   std_logic                                         -- vsync
		);
	end component base_system;

